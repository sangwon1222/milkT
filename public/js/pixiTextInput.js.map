{"version":3,"file":"pixiTextInput.js","sources":["../src/input.js","../src/button.js"],"sourcesContent":["import * as PIXI from 'pixi.js'\n\n\nexport class TextInput extends PIXI.Container {\n\n    constructor (styles) {\n        super ();\n        this._input_style = Object.assign (\n            {\n                position : 'absolute',\n                background : 'none',\n                border : 'none',\n                outline : 'none',\n                transformOrigin : '0 0',\n                lineHeight : '1'\n            },\n            styles.input\n        );\n\n        if (styles.box) {\n            this._box_generator = typeof styles.box === 'function' ? styles.box : new DefaultBoxGenerator (styles.box)\n        } else {\n            this._box_generator = null;\n        }\n        if (this._input_style.hasOwnProperty ('multiline')) {\n            this._multiline = !!this._input_style.multiline;\n            delete this._input_style.multiline\n        } else {\n            this._multiline = false;\n        }\n\n        this._box_cache = {};\n        this._previous = {};\n        this._dom_added = false;\n        this._dom_visible = true;\n        this._placeholder = '';\n        this._placeholderColor = 0xa9a9a9;\n        this._selection = [0, 0];\n        this._restrict_value = '';\n        this._createDOMInput ();\n        this.substituteText = true;\n        this._setState ('DEFAULT');\n        this._addListeners ()\n    }\n\n\n    // GETTERS & SETTERS\n\n    get substituteText () {\n        return this._substituted\n    }\n\n    set substituteText (substitute) {\n        if (this._substituted == substitute)\n            return\n\n        this._substituted = substitute\n\n        if (substitute) {\n            this._createSurrogate ()\n            this._dom_visible = false\n        } else {\n            this._destroySurrogate ()\n            this._dom_visible = true\n        }\n        this.placeholder = this._placeholder\n        this._update ()\n    }\n\n    get placeholder () {\n        return this._placeholder\n    }\n\n    set placeholder (text) {\n        this._placeholder = text\n        if (this._substituted) {\n            this._updateSurrogate ()\n            this._dom_input.placeholder = ''\n        } else {\n            this._dom_input.placeholder = text\n        }\n    }\n\n    get disabled () {\n        return this._disabled\n    }\n\n    set disabled (disabled) {\n        this._disabled = disabled\n        this._dom_input.disabled = disabled\n        this._setState (disabled ? 'DISABLED' : 'DEFAULT')\n    }\n\n    get maxLength () {\n        return this._max_length\n    }\n\n    set maxLength (length) {\n        this._max_length = length\n        this._dom_input.setAttribute ('maxlength', length)\n    }\n\n    get restrict () {\n        return this._restrict_regex\n    }\n\n    set restrict (regex) {\n        if (regex instanceof RegExp) {\n            regex = regex.toString ().slice (1, -1)\n\n            if (regex.charAt (0) !== '^')\n                regex = '^' + regex\n\n            if (regex.charAt (regex.length - 1) !== '$')\n                regex = regex + '$'\n\n            regex = new RegExp (regex)\n        } else {\n            regex = new RegExp ('^[' + regex + ']*$')\n        }\n\n        this._restrict_regex = regex\n    }\n\n    get text () {\n        return this._dom_input.value\n    }\n\n    set text (text) {\n        this._dom_input.value = text\n        if (this._substituted) this._updateSurrogate ()\n    }\n\n    get htmlInput () {\n        return this._dom_input\n    }\n\n    focus () {\n        if (this._substituted && !this.dom_visible)\n            this._setDOMInputVisible (true)\n\n        this._dom_input.focus ()\n\n    }\n\n    blur () {\n        this._dom_input.blur ()\n    }\n\n    select () {\n        this.focus ()\n        this._dom_input.select ()\n    }\n\n    setInputStyle (key, value) {\n        this._input_style[key] = value\n        this._dom_input.style[key] = value\n\n        if (this._substituted && (key === 'fontFamily' || key === 'fontSize'))\n            this._updateFontMetrics ()\n\n        if (this._last_renderer)\n            this._update ()\n    }\n\n    destroy (options) {\n        this._destroyBoxCache ()\n        super.destroy (options)\n    }\n\n\n    // SETUP\n\n    _createDOMInput () {\n        if (this._multiline) {\n            this._dom_input = document.createElement ('textarea')\n            this._dom_input.style.resize = 'none'\n        } else {\n            this._dom_input = document.createElement ('input')\n            this._dom_input.type = 'text'\n        }\n\n        for (let key in this._input_style) {\n            this._dom_input.style[key] = this._input_style[key]\n        }\n    }\n\n    _addListeners () {\n        this.on ('added', this._onAdded.bind (this))\n        this.on ('removed', this._onRemoved.bind (this))\n        this._dom_input.addEventListener ('keydown', this._onInputKeyDown.bind (this))\n        this._dom_input.addEventListener ('input', this._onInputInput.bind (this))\n        this._dom_input.addEventListener ('keyup', this._onInputKeyUp.bind (this))\n        this._dom_input.addEventListener ('focus', this._onFocused.bind (this))\n        this._dom_input.addEventListener ('blur', this._onBlurred.bind (this))\n    }\n\n    _onInputKeyDown (e) {\n        this._selection = [\n            this._dom_input.selectionStart,\n            this._dom_input.selectionEnd\n        ]\n\n        this.emit ('keydown', e.keyCode)\n    }\n\n    _onInputInput (e) {\n        if (this._restrict_regex);\n            this._applyRestriction ();\n\n        if (this._substituted)\n            this._updateSubstitution ();\n\n        this.emit ('input', this.text);\n    }\n\n    _onInputKeyUp (e) {\n        this.emit ('keyup', e.keyCode)\n    }\n\n    _onFocused () {\n        this._setState ('FOCUSED')\n        this.emit ('focus')\n    }\n\n    _onBlurred () {\n        this._setState ('DEFAULT')\n        this.emit ('blur')\n    }\n\n    _onAdded () {\n        document.body.appendChild (this._dom_input)\n        this._dom_input.style.display = 'none'\n        this._dom_added = true\n    }\n\n    _onRemoved () {\n        document.body.removeChild (this._dom_input)\n        this._dom_added = false\n    }\n\n    _setState (state) {\n        this.state = state\n        this._updateBox ()\n        if (this._substituted)\n            this._updateSubstitution ()\n    }\n\n\n    // RENDER & UPDATE\n\n    // for pixi v4\n    renderWebGL (renderer) {\n        super.render (renderer)\n        this._renderInternal (renderer)\n    }\n\n    // for pixi v4\n    renderCanvas (renderer) {\n        super.renderCanvas (renderer)\n        this._renderInternal (renderer)\n    }\n\n    // for pixi v5\n    render (renderer) {\n        super.render (renderer)\n        this._renderInternal (renderer)\n    }\n\n    _renderInternal (renderer) {\n        this._resolution = renderer.resolution\n        this._last_renderer = renderer\n        this._canvas_bounds = this._getCanvasBounds ()\n        if (this._needsUpdate ())\n            this._update ()\n    }\n\n    _update () {\n        this._updateDOMInput ()\n        if (this._substituted) this._updateSurrogate ()\n        this._updateBox ()\n    }\n\n    _updateBox () {\n        if (!this._box_generator)\n            return\n\n        if (this._needsNewBoxCache ())\n            this._buildBoxCache ()\n\n        if (this.state == this._previous.state\n            && this._box == this._box_cache[this.state])\n            return\n\n        if (this._box)\n            this.removeChild (this._box)\n\n        this._box = this._box_cache[this.state]\n        this.addChildAt (this._box, 0)\n        this._previous.state = this.state\n    }\n\n    _updateSubstitution () {\n        if (this.state === 'FOCUSED') {\n            this._dom_visible = true\n            this._surrogate.visible = this.text.length === 0\n        } else {\n            this._dom_visible = false\n            this._surrogate.visible = true\n        }\n        this._updateDOMInput ()\n        this._updateSurrogate ()\n    }\n\n    _updateDOMInput () {\n        if (!this._canvas_bounds)\n            return\n\n        this._dom_input.style.top = this._canvas_bounds.top + 'px'\n        this._dom_input.style.left = this._canvas_bounds.left + 'px'\n        this._dom_input.style.transform = this._pixiMatrixToCSS (this._getDOMRelativeWorldTransform ())\n        this._dom_input.style.opacity = this.worldAlpha\n        this._setDOMInputVisible (this.worldVisible && this._dom_visible)\n\n        this._previous.canvas_bounds = this._canvas_bounds\n        this._previous.world_transform = this.worldTransform.clone ()\n        this._previous.world_alpha = this.worldAlpha\n        this._previous.world_visible = this.worldVisible\n    }\n\n    _applyRestriction () {\n        if (this._restrict_regex.test (this.text)) {\n            this._restrict_value = this.text\n        } else {\n            this.text = this._restrict_value\n            this._dom_input.setSelectionRange (\n                this._selection[0],\n                this._selection[1]\n            )\n        }\n    }\n\n\n    // STATE COMPAIRSON (FOR PERFORMANCE BENEFITS)\n\n    _needsUpdate () {\n        return (\n            !this._comparePixiMatrices (this.worldTransform, this._previous.world_transform)\n            || !this._compareClientRects (this._canvas_bounds, this._previous.canvas_bounds)\n            || this.worldAlpha != this._previous.world_alpha\n            || this.worldVisible != this._previous.world_visible\n        )\n    }\n\n    _needsNewBoxCache () {\n        let input_bounds = this._getDOMInputBounds ()\n        return (\n            !this._previous.input_bounds\n            || input_bounds.width != this._previous.input_bounds.width\n            || input_bounds.height != this._previous.input_bounds.height\n        )\n    }\n\n\n    // INPUT SUBSTITUTION\n\n    _createSurrogate () {\n        this._surrogate_hitbox = new PIXI.Graphics ()\n        this._surrogate_hitbox.alpha = 0\n        this._surrogate_hitbox.interactive = true\n        this._surrogate_hitbox.cursor = 'text'\n        this._surrogate_hitbox.on ('pointerdown', this._onSurrogateFocus.bind (this))\n        this.addChild (this._surrogate_hitbox)\n\n        this._surrogate_mask = new PIXI.Graphics ()\n        this.addChild (this._surrogate_mask)\n\n        this._surrogate = new PIXI.Text ('', {})\n        this.addChild (this._surrogate)\n\n        this._surrogate.mask = this._surrogate_mask\n\n        this._updateFontMetrics ()\n        this._updateSurrogate ()\n    }\n\n    _updateSurrogate () {\n        let padding = this._deriveSurrogatePadding ()\n        let input_bounds = this._getDOMInputBounds ()\n\n        this._surrogate.style = this._deriveSurrogateStyle ()\n        this._surrogate.style.padding = Math.max.apply (Math, padding)\n        this._surrogate.y = this._multiline ? padding[0] : (input_bounds.height - this._surrogate.height) / 2\n        this._surrogate.x = padding[3]\n        this._surrogate.text = this._deriveSurrogateText ()\n\n        this._updateSurrogateHitbox (input_bounds)\n        this._updateSurrogateMask (input_bounds, padding)\n    }\n\n    _updateSurrogateHitbox (bounds) {\n        this._surrogate_hitbox.clear ()\n        this._surrogate_hitbox.beginFill (0)\n        this._surrogate_hitbox.drawRect (0, 0, bounds.width, bounds.height)\n        this._surrogate_hitbox.endFill ()\n        this._surrogate_hitbox.interactive = !this._disabled\n    }\n\n    _updateSurrogateMask (bounds, padding) {\n        this._surrogate_mask.clear ()\n        this._surrogate_mask.beginFill (0)\n        this._surrogate_mask.drawRect (padding[3], 0, bounds.width - padding[3] - padding[1], bounds.height)\n        this._surrogate_mask.endFill ()\n    }\n\n    _destroySurrogate () {\n        if (!this._surrogate) return\n\n        this.removeChild (this._surrogate)\n        this.removeChild (this._surrogate_hitbox)\n\n        this._surrogate.destroy ()\n        this._surrogate_hitbox.destroy ()\n\n        this._surrogate = null\n        this._surrogate_hitbox = null\n    }\n\n    _onSurrogateFocus () {\n        this._setDOMInputVisible (true)\n        //sometimes the input is not being focused by the mouseclick\n        setTimeout (this._ensureFocus.bind (this), 10)\n    }\n\n    _ensureFocus () {\n        if (!this._hasFocus ())\n            this.focus ()\n    }\n\n    _deriveSurrogateStyle () {\n        let style = new PIXI.TextStyle ()\n\n        for (var key in this._input_style) {\n            switch (key) {\n                case 'color':\n                    style.fill = this._input_style.color\n                    break\n                case 'fontFamily':\n                case 'fontSize':\n                case 'fontWeight':\n                case 'fontVariant':\n                case 'fontStyle':\n                    style[key] = this._input_style[key]\n                    break\n                case 'letterSpacing':\n                    style.letterSpacing = parseFloat (this._input_style.letterSpacing)\n                    break\n            }\n        }\n\n        if (this._multiline) {\n            style.lineHeight = parseFloat (style.fontSize)\n            style.wordWrap = true\n            style.wordWrapWidth = this._getDOMInputBounds ().width\n        }\n\n        if (this._dom_input.value.length === 0)\n            style.fill = this._placeholderColor\n\n        return style\n    }\n\n    _deriveSurrogatePadding () {\n        let indent = this._input_style.textIndent ? parseFloat (this._input_style.textIndent) : 0\n\n        if (this._input_style.padding && this._input_style.padding.length > 0) {\n            let components = this._input_style.padding.trim ().split (' ')\n\n            if (components.length == 1) {\n                let padding = parseFloat (components[0])\n                return [padding, padding, padding, padding + indent]\n            } else if (components.length == 2) {\n                let paddingV = parseFloat (components[0])\n                let paddingH = parseFloat (components[1])\n                return [paddingV, paddingH, paddingV, paddingH + indent]\n            } else if (components.length == 4) {\n                let padding = components.map (component => {\n                    return parseFloat (component)\n                })\n                padding[3] += indent\n                return padding\n            }\n        }\n\n        return [0, 0, 0, indent]\n    }\n\n    _deriveSurrogateText () {\n        return this._dom_input.value.length === 0 ? this._placeholder : this._dom_input.value\n    }\n\n    _updateFontMetrics () {\n        const style = this._deriveSurrogateStyle ()\n        const font = style.toFontString ()\n\n        this._font_metrics = PIXI.TextMetrics.measureFont (font)\n    }\n\n\n    // CACHING OF INPUT BOX GRAPHICS\n\n    _buildBoxCache () {\n        this._destroyBoxCache ()\n\n        let states = ['DEFAULT', 'FOCUSED', 'DISABLED']\n        let input_bounds = this._getDOMInputBounds ()\n\n        for (let i in states) {\n            this._box_cache[states[i]] = this._box_generator (\n                input_bounds.width,\n                input_bounds.height,\n                states[i]\n            )\n        }\n\n        this._previous.input_bounds = input_bounds\n    }\n\n    _destroyBoxCache () {\n        if (this._box) {\n            this.removeChild (this._box)\n            this._box = null\n        }\n\n        for (let i in this._box_cache) {\n            this._box_cache[i].destroy ()\n            this._box_cache[i] = null\n            delete this._box_cache[i]\n        }\n    }\n\n\n    // HELPER FUNCTIONS\n\n    _hasFocus () {\n        return document.activeElement === this._dom_input\n    }\n\n    _setDOMInputVisible (visible) {\n        this._dom_input.style.display = visible ? 'block' : 'none'\n    }\n\n    _getCanvasBounds () {\n        let rect = this._last_renderer.view.getBoundingClientRect ()\n        let bounds = { top : rect.top, left : rect.left, width : rect.width, height : rect.height }\n        bounds.left += window.scrollX\n        bounds.top += window.scrollY\n        return bounds\n    }\n\n    _getDOMInputBounds () {\n        let remove_after = false\n\n        if (!this._dom_added) {\n            document.body.appendChild (this._dom_input)\n            remove_after = true\n        }\n\n        let org_transform = this._dom_input.style.transform\n        let org_display = this._dom_input.style.display\n        this._dom_input.style.transform = ''\n        this._dom_input.style.display = 'block'\n        let bounds = this._dom_input.getBoundingClientRect ()\n        this._dom_input.style.transform = org_transform\n        this._dom_input.style.display = org_display\n\n        if (remove_after)\n            document.body.removeChild (this._dom_input)\n\n        return bounds\n    }\n\n    _getDOMRelativeWorldTransform () {\n        let canvas_bounds = this._last_renderer.view.getBoundingClientRect ()\n        let matrix = this.worldTransform.clone ()\n\n        matrix.scale (this._resolution, this._resolution)\n        matrix.scale (canvas_bounds.width / this._last_renderer.width,\n            canvas_bounds.height / this._last_renderer.height)\n        return matrix\n    }\n\n    _pixiMatrixToCSS (m) {\n        return 'matrix(' + [m.a, m.b, m.c, m.d, m.tx, m.ty].join (',') + ')'\n    }\n\n    _comparePixiMatrices (m1, m2) {\n        if (!m1 || !m2) return false\n        return (\n            m1.a == m2.a\n            && m1.b == m2.b\n            && m1.c == m2.c\n            && m1.d == m2.d\n            && m1.tx == m2.tx\n            && m1.ty == m2.ty\n        )\n    }\n\n    _compareClientRects (r1, r2) {\n        if (!r1 || !r2) return false\n        return (\n            r1.left == r2.left\n            && r1.top == r2.top\n            && r1.width == r2.width\n            && r1.height == r2.height\n        )\n    }\n}\n\n\nfunction DefaultBoxGenerator (styles) {\n    styles = styles || { fill : 0xcccccc }\n\n    if (styles.default) {\n        styles.focused = styles.focused || styles.default\n        styles.disabled = styles.disabled || styles.default\n    } else {\n        let temp_styles = styles\n        styles = {}\n        styles.default = styles.focused = styles.disabled = temp_styles\n    }\n\n    return function (w, h, state) {\n        let style = styles[state.toLowerCase ()]\n        let box = new PIXI.Graphics ()\n\n        if (style.fill)\n            box.beginFill (style.fill)\n\n        if (style.stroke)\n            box.lineStyle (\n                style.stroke.width || 1,\n                style.stroke.color || 0,\n                style.stroke.alpha || 1\n            )\n\n        if (style.rounded)\n            box.drawRoundedRect (0, 0, w, h, style.rounded)\n        else\n            box.drawRect (0, 0, w, h)\n\n        box.endFill ()\n        box.closePath ()\n\n        return box\n    }\n}\n","import { Sprite, utils } from 'pixi.js'\n\n/**\n * An UI button object\n *\n * @class\n * @extends PIXI.utils.EventEmitter\n */\n\nexport class ButtonTexture extends utils.EventEmitter {\n    constructor (options) {\n        super (options);\n        this._options = options;\n        const _btn = new Sprite (options.textureButton);\n        _btn._btnMode = true;\n        _btn.anchor.set (options.anchor ? options.anchor : 0.5);\n        _btn.position.x = options.x;\n        _btn.position.y = options.y;\n        _btn.interactive = true;\n        _btn\n        // set the mousedown and touchstart callback...\n            .on ('mousedown', this.onButtonDown)\n            .on ('touchstart', this.onButtonDown)\n            // set the mouseup and touchend callback...\n            .on ('mouseup', this.onButtonUp)\n            .on ('touchend', this.onButtonUp)\n            .on ('mouseupoutside', this.onButtonUp)\n            .on ('touchendoutside', this.onButtonUp)\n            // set the mouseover callback...\n            .on ('mouseover', this.onButtonOver)\n            // set the mouseout callback...\n            .on ('mouseout', this.onButtonOut)\n        //  .on ('tap', this.onButtonDown)\n        //  .on ('click', this.onButtonDown)\n\n        this.button = _btn;\n    }\n\n    getButtonFace () {\n        return this.button;\n    }\n\n    onButtonDown () {\n        this.button.isdown = true;\n        this.emit (\"BUTTONDOWN\");\n        this.button.texture = this._options.textureButtonDown;\n        this.button.alpha = 1;\n        window.console.log (\"button down\")\n    }\n\n\n    onButtonUp () {\n        this.button.isdown = false;\n        if (this.button.isOver) {\n            this.emit (\"BUTTONCONFIRM\");\n            this.button.texture = this._options.textureButtonOver;\n        } else {\n            this.emit (\"BUTTONUP\");\n            this.button.texture = this._options.textureButton;\n        }\n        window.console.log (\"button up\")\n    }\n\n    onButtonOver () {\n        this.button.isOver = true;\n        this.emit (\"BUTTONOVER\");\n        if (this.button.isdown) {\n            return;\n        }\n        this.button.texture = this._options.textureButtonOver;\n    }\n\n    onButtonOut () {\n        this.button.isOver = false;\n        this.emit (\"BUTTONOUT\");\n        if (this.button.isdown) {\n            return;\n        }\n        this.button.texture = this._options.textureButton;\n    }\n\n}\n"],"names":["DefaultBoxGenerator","styles","fill","default","focused","disabled","temp_styles","w","h","state","style","toLowerCase","box","PIXI.Graphics","beginFill","stroke","lineStyle","width","color","alpha","rounded","drawRoundedRect","drawRect","endFill","closePath","utils","EventEmitter","[object Object]","options","super","this","_options","_btn","Sprite","textureButton","_btnMode","anchor","set","position","x","y","interactive","on","onButtonDown","onButtonUp","onButtonOver","onButtonOut","button","isdown","emit","texture","textureButtonDown","window","console","log","isOver","textureButtonOver","PIXI.Container","_input_style","Object","assign","background","border","outline","transformOrigin","lineHeight","input","_box_generator","hasOwnProperty","_multiline","multiline","_box_cache","_previous","_dom_added","_dom_visible","_placeholder","_placeholderColor","_selection","_restrict_value","_createDOMInput","substituteText","_setState","_addListeners","_substituted","substitute","_createSurrogate","_destroySurrogate","placeholder","_update","text","_updateSurrogate","_dom_input","_disabled","maxLength","_max_length","length","setAttribute","restrict","_restrict_regex","regex","RegExp","toString","slice","charAt","value","htmlInput","dom_visible","_setDOMInputVisible","focus","blur","select","key","_updateFontMetrics","_last_renderer","_destroyBoxCache","destroy","document","createElement","resize","type","_onAdded","bind","_onRemoved","addEventListener","_onInputKeyDown","_onInputInput","_onInputKeyUp","_onFocused","_onBlurred","e","selectionStart","selectionEnd","keyCode","_applyRestriction","_updateSubstitution","body","appendChild","display","removeChild","_updateBox","renderer","render","_renderInternal","renderCanvas","_resolution","resolution","_canvas_bounds","_getCanvasBounds","_needsUpdate","_updateDOMInput","_needsNewBoxCache","_buildBoxCache","_box","addChildAt","_surrogate","visible","top","left","transform","_pixiMatrixToCSS","_getDOMRelativeWorldTransform","opacity","worldAlpha","worldVisible","canvas_bounds","world_transform","worldTransform","clone","world_alpha","world_visible","test","setSelectionRange","_comparePixiMatrices","_compareClientRects","input_bounds","_getDOMInputBounds","height","_surrogate_hitbox","cursor","_onSurrogateFocus","addChild","_surrogate_mask","PIXI.Text","mask","padding","_deriveSurrogatePadding","_deriveSurrogateStyle","Math","max","apply","_deriveSurrogateText","_updateSurrogateHitbox","_updateSurrogateMask","bounds","clear","setTimeout","_ensureFocus","_hasFocus","PIXI.TextStyle","letterSpacing","parseFloat","fontSize","wordWrap","wordWrapWidth","indent","textIndent","components","trim","split","paddingV","paddingH","map","component","font","toFontString","_font_metrics","PIXI.TextMetrics","measureFont","states","i","activeElement","rect","view","getBoundingClientRect","scrollX","scrollY","remove_after","org_transform","org_display","matrix","scale","m","a","b","c","d","tx","ty","join","m1","m2","r1","r2"],"mappings":"gPA4mBA,SAASA,EAAqBC,GAG1B,IAFAA,EAASA,GAAU,CAAEC,KAAO,WAEjBC,QACPF,EAAOG,QAAUH,EAAOG,SAAWH,EAAOE,QAC1CF,EAAOI,SAAWJ,EAAOI,UAAYJ,EAAOE,YACzC,CACH,IAAIG,EAAcL,GAClBA,EAAS,IACFE,QAAUF,EAAOG,QAAUH,EAAOI,SAAWC,EAGxD,OAAO,SAAUC,EAAGC,EAAGC,GACnB,IAAIC,EAAQT,EAAOQ,EAAME,eACrBC,EAAM,IAAIC,WAoBd,OAlBIH,EAAMR,MACNU,EAAIE,UAAWJ,EAAMR,MAErBQ,EAAMK,QACNH,EAAII,UACAN,EAAMK,OAAOE,OAAS,EACtBP,EAAMK,OAAOG,OAAS,EACtBR,EAAMK,OAAOI,OAAS,GAG1BT,EAAMU,QACNR,EAAIS,gBAAiB,EAAG,EAAGd,EAAGC,EAAGE,EAAMU,SAEvCR,EAAIU,SAAU,EAAG,EAAGf,EAAGC,GAE3BI,EAAIW,UACJX,EAAIY,YAEGZ,mBCroBR,cAA4Ba,QAAMC,aACrCC,YAAaC,GACTC,MAAOD,GACPE,KAAKC,SAAWH,EAChB,MAAMI,EAAO,IAAIC,SAAQL,EAAQM,eACjCF,EAAKG,UAAW,EAChBH,EAAKI,OAAOC,IAAKT,EAAQQ,OAASR,EAAQQ,OAAS,IACnDJ,EAAKM,SAASC,EAAIX,EAAQW,EAC1BP,EAAKM,SAASE,EAAIZ,EAAQY,EAC1BR,EAAKS,aAAc,EACnBT,EAEKU,GAAI,YAAaZ,KAAKa,cACtBD,GAAI,aAAcZ,KAAKa,cAEvBD,GAAI,UAAWZ,KAAKc,YACpBF,GAAI,WAAYZ,KAAKc,YACrBF,GAAI,iBAAkBZ,KAAKc,YAC3BF,GAAI,kBAAmBZ,KAAKc,YAE5BF,GAAI,YAAaZ,KAAKe,cAEtBH,GAAI,WAAYZ,KAAKgB,aAI1BhB,KAAKiB,OAASf,EAGlBL,gBACI,OAAOG,KAAKiB,OAGhBpB,eACIG,KAAKiB,OAAOC,QAAS,EACrBlB,KAAKmB,KAAM,cACXnB,KAAKiB,OAAOG,QAAUpB,KAAKC,SAASoB,kBACpCrB,KAAKiB,OAAO5B,MAAQ,EACpBiC,OAAOC,QAAQC,IAAK,eAIxB3B,aACIG,KAAKiB,OAAOC,QAAS,EACjBlB,KAAKiB,OAAOQ,QACZzB,KAAKmB,KAAM,iBACXnB,KAAKiB,OAAOG,QAAUpB,KAAKC,SAASyB,oBAEpC1B,KAAKmB,KAAM,YACXnB,KAAKiB,OAAOG,QAAUpB,KAAKC,SAASG,eAExCkB,OAAOC,QAAQC,IAAK,aAGxB3B,eACIG,KAAKiB,OAAOQ,QAAS,EACrBzB,KAAKmB,KAAM,cACPnB,KAAKiB,OAAOC,SAGhBlB,KAAKiB,OAAOG,QAAUpB,KAAKC,SAASyB,mBAGxC7B,cACIG,KAAKiB,OAAOQ,QAAS,EACrBzB,KAAKmB,KAAM,aACPnB,KAAKiB,OAAOC,SAGhBlB,KAAKiB,OAAOG,QAAUpB,KAAKC,SAASG,6BD3ErC,cAAwBuB,YAE3B9B,YAAa1B,GACT4B,QACAC,KAAK4B,aAAeC,OAAOC,OACvB,CACItB,SAAW,WACXuB,WAAa,OACbC,OAAS,OACTC,QAAU,OACVC,gBAAkB,MAClBC,WAAa,KAEjBhE,EAAOiE,OAGPjE,EAAOW,IACPkB,KAAKqC,eAAuC,mBAAflE,EAAOW,IAAqBX,EAAOW,IAAM,IAAIZ,EAAqBC,EAAOW,KAEtGkB,KAAKqC,eAAiB,KAEtBrC,KAAK4B,aAAaU,eAAgB,cAClCtC,KAAKuC,aAAevC,KAAK4B,aAAaY,iBAC/BxC,KAAK4B,aAAaY,WAEzBxC,KAAKuC,YAAa,EAGtBvC,KAAKyC,WAAa,GAClBzC,KAAK0C,UAAY,GACjB1C,KAAK2C,YAAa,EAClB3C,KAAK4C,cAAe,EACpB5C,KAAK6C,aAAe,GACpB7C,KAAK8C,kBAAoB,SACzB9C,KAAK+C,WAAa,CAAC,EAAG,GACtB/C,KAAKgD,gBAAkB,GACvBhD,KAAKiD,kBACLjD,KAAKkD,gBAAiB,EACtBlD,KAAKmD,UAAW,WAChBnD,KAAKoD,gBAMTF,qBACI,OAAOlD,KAAKqD,aAGhBH,mBAAoBI,GACZtD,KAAKqD,cAAgBC,IAGzBtD,KAAKqD,aAAeC,EAEhBA,GACAtD,KAAKuD,mBACLvD,KAAK4C,cAAe,IAEpB5C,KAAKwD,oBACLxD,KAAK4C,cAAe,GAExB5C,KAAKyD,YAAczD,KAAK6C,aACxB7C,KAAK0D,WAGTD,kBACI,OAAOzD,KAAK6C,aAGhBY,gBAAiBE,GACb3D,KAAK6C,aAAec,EAChB3D,KAAKqD,cACLrD,KAAK4D,mBACL5D,KAAK6D,WAAWJ,YAAc,IAE9BzD,KAAK6D,WAAWJ,YAAcE,EAItCpF,eACI,OAAOyB,KAAK8D,UAGhBvF,aAAcA,GACVyB,KAAK8D,UAAYvF,EACjByB,KAAK6D,WAAWtF,SAAWA,EAC3ByB,KAAKmD,UAAW5E,EAAW,WAAa,WAG5CwF,gBACI,OAAO/D,KAAKgE,YAGhBD,cAAeE,GACXjE,KAAKgE,YAAcC,EACnBjE,KAAK6D,WAAWK,aAAc,YAAaD,GAG/CE,eACI,OAAOnE,KAAKoE,gBAGhBD,aAAcE,GACNA,aAAiBC,QAGQ,OAFzBD,EAAQA,EAAME,WAAYC,MAAO,GAAI,IAE3BC,OAAQ,KACdJ,EAAQ,IAAMA,GAEsB,MAApCA,EAAMI,OAAQJ,EAAMJ,OAAS,KAC7BI,GAAgB,KAEpBA,EAAQ,IAAIC,OAAQD,IAEpBA,EAAQ,IAAIC,OAAQ,KAAOD,EAAQ,OAGvCrE,KAAKoE,gBAAkBC,EAG3BV,WACI,OAAO3D,KAAK6D,WAAWa,MAG3Bf,SAAUA,GACN3D,KAAK6D,WAAWa,MAAQf,EACpB3D,KAAKqD,cAAcrD,KAAK4D,mBAGhCe,gBACI,OAAO3E,KAAK6D,WAGhBhE,QACQG,KAAKqD,eAAiBrD,KAAK4E,aAC3B5E,KAAK6E,qBAAqB,GAE9B7E,KAAK6D,WAAWiB,QAIpBjF,OACIG,KAAK6D,WAAWkB,OAGpBlF,SACIG,KAAK8E,QACL9E,KAAK6D,WAAWmB,SAGpBnF,cAAeoF,EAAKP,GAChB1E,KAAK4B,aAAaqD,GAAOP,EACzB1E,KAAK6D,WAAWjF,MAAMqG,GAAOP,GAEzB1E,KAAKqD,cAAyB,eAAR4B,GAAgC,aAARA,GAC9CjF,KAAKkF,qBAELlF,KAAKmF,gBACLnF,KAAK0D,UAGb7D,QAASC,GACLE,KAAKoF,mBACLrF,MAAMsF,QAASvF,GAMnBD,kBACQG,KAAKuC,YACLvC,KAAK6D,WAAayB,SAASC,cAAe,YAC1CvF,KAAK6D,WAAWjF,MAAM4G,OAAS,SAE/BxF,KAAK6D,WAAayB,SAASC,cAAe,SAC1CvF,KAAK6D,WAAW4B,KAAO,QAG3B,IAAK,IAAIR,KAAOjF,KAAK4B,aACjB5B,KAAK6D,WAAWjF,MAAMqG,GAAOjF,KAAK4B,aAAaqD,GAIvDpF,gBACIG,KAAKY,GAAI,QAASZ,KAAK0F,SAASC,KAAM3F,OACtCA,KAAKY,GAAI,UAAWZ,KAAK4F,WAAWD,KAAM3F,OAC1CA,KAAK6D,WAAWgC,iBAAkB,UAAW7F,KAAK8F,gBAAgBH,KAAM3F,OACxEA,KAAK6D,WAAWgC,iBAAkB,QAAS7F,KAAK+F,cAAcJ,KAAM3F,OACpEA,KAAK6D,WAAWgC,iBAAkB,QAAS7F,KAAKgG,cAAcL,KAAM3F,OACpEA,KAAK6D,WAAWgC,iBAAkB,QAAS7F,KAAKiG,WAAWN,KAAM3F,OACjEA,KAAK6D,WAAWgC,iBAAkB,OAAQ7F,KAAKkG,WAAWP,KAAM3F,OAGpEH,gBAAiBsG,GACbnG,KAAK+C,WAAa,CACd/C,KAAK6D,WAAWuC,eAChBpG,KAAK6D,WAAWwC,cAGpBrG,KAAKmB,KAAM,UAAWgF,EAAEG,SAG5BzG,cAAesG,GACPnG,KAAKoE,gBACLpE,KAAKuG,oBAELvG,KAAKqD,cACLrD,KAAKwG,sBAETxG,KAAKmB,KAAM,QAASnB,KAAK2D,MAG7B9D,cAAesG,GACXnG,KAAKmB,KAAM,QAASgF,EAAEG,SAG1BzG,aACIG,KAAKmD,UAAW,WAChBnD,KAAKmB,KAAM,SAGftB,aACIG,KAAKmD,UAAW,WAChBnD,KAAKmB,KAAM,QAGftB,WACIyF,SAASmB,KAAKC,YAAa1G,KAAK6D,YAChC7D,KAAK6D,WAAWjF,MAAM+H,QAAU,OAChC3G,KAAK2C,YAAa,EAGtB9C,aACIyF,SAASmB,KAAKG,YAAa5G,KAAK6D,YAChC7D,KAAK2C,YAAa,EAGtB9C,UAAWlB,GACPqB,KAAKrB,MAAQA,EACbqB,KAAK6G,aACD7G,KAAKqD,cACLrD,KAAKwG,sBAOb3G,YAAaiH,GACT/G,MAAMgH,OAAQD,GACd9G,KAAKgH,gBAAiBF,GAI1BjH,aAAciH,GACV/G,MAAMkH,aAAcH,GACpB9G,KAAKgH,gBAAiBF,GAI1BjH,OAAQiH,GACJ/G,MAAMgH,OAAQD,GACd9G,KAAKgH,gBAAiBF,GAG1BjH,gBAAiBiH,GACb9G,KAAKkH,YAAcJ,EAASK,WAC5BnH,KAAKmF,eAAiB2B,EACtB9G,KAAKoH,eAAiBpH,KAAKqH,mBACvBrH,KAAKsH,gBACLtH,KAAK0D,UAGb7D,UACIG,KAAKuH,kBACDvH,KAAKqD,cAAcrD,KAAK4D,mBAC5B5D,KAAK6G,aAGThH,aACSG,KAAKqC,iBAGNrC,KAAKwH,qBACLxH,KAAKyH,iBAELzH,KAAKrB,OAASqB,KAAK0C,UAAU/D,OAC1BqB,KAAK0H,MAAQ1H,KAAKyC,WAAWzC,KAAKrB,SAGrCqB,KAAK0H,MACL1H,KAAK4G,YAAa5G,KAAK0H,MAE3B1H,KAAK0H,KAAO1H,KAAKyC,WAAWzC,KAAKrB,OACjCqB,KAAK2H,WAAY3H,KAAK0H,KAAM,GAC5B1H,KAAK0C,UAAU/D,MAAQqB,KAAKrB,QAGhCkB,sBACuB,YAAfG,KAAKrB,OACLqB,KAAK4C,cAAe,EACpB5C,KAAK4H,WAAWC,QAA+B,IAArB7H,KAAK2D,KAAKM,SAEpCjE,KAAK4C,cAAe,EACpB5C,KAAK4H,WAAWC,SAAU,GAE9B7H,KAAKuH,kBACLvH,KAAK4D,mBAGT/D,kBACSG,KAAKoH,iBAGVpH,KAAK6D,WAAWjF,MAAMkJ,IAAM9H,KAAKoH,eAAeU,IAAM,KACtD9H,KAAK6D,WAAWjF,MAAMmJ,KAAO/H,KAAKoH,eAAeW,KAAO,KACxD/H,KAAK6D,WAAWjF,MAAMoJ,UAAYhI,KAAKiI,iBAAkBjI,KAAKkI,iCAC9DlI,KAAK6D,WAAWjF,MAAMuJ,QAAUnI,KAAKoI,WACrCpI,KAAK6E,oBAAqB7E,KAAKqI,cAAgBrI,KAAK4C,cAEpD5C,KAAK0C,UAAU4F,cAAgBtI,KAAKoH,eACpCpH,KAAK0C,UAAU6F,gBAAkBvI,KAAKwI,eAAeC,QACrDzI,KAAK0C,UAAUgG,YAAc1I,KAAKoI,WAClCpI,KAAK0C,UAAUiG,cAAgB3I,KAAKqI,cAGxCxI,oBACQG,KAAKoE,gBAAgBwE,KAAM5I,KAAK2D,MAChC3D,KAAKgD,gBAAkBhD,KAAK2D,MAE5B3D,KAAK2D,KAAO3D,KAAKgD,gBACjBhD,KAAK6D,WAAWgF,kBACZ7I,KAAK+C,WAAW,GAChB/C,KAAK+C,WAAW,KAQ5BlD,eACI,OACKG,KAAK8I,qBAAsB9I,KAAKwI,eAAgBxI,KAAK0C,UAAU6F,mBAC5DvI,KAAK+I,oBAAqB/I,KAAKoH,eAAgBpH,KAAK0C,UAAU4F,gBAC/DtI,KAAKoI,YAAcpI,KAAK0C,UAAUgG,aAClC1I,KAAKqI,cAAgBrI,KAAK0C,UAAUiG,cAI/C9I,oBACI,IAAImJ,EAAehJ,KAAKiJ,qBACxB,OACKjJ,KAAK0C,UAAUsG,cACbA,EAAa7J,OAASa,KAAK0C,UAAUsG,aAAa7J,OAClD6J,EAAaE,QAAUlJ,KAAK0C,UAAUsG,aAAaE,OAO9DrJ,mBACIG,KAAKmJ,kBAAoB,IAAIpK,WAC7BiB,KAAKmJ,kBAAkB9J,MAAQ,EAC/BW,KAAKmJ,kBAAkBxI,aAAc,EACrCX,KAAKmJ,kBAAkBC,OAAS,OAChCpJ,KAAKmJ,kBAAkBvI,GAAI,cAAeZ,KAAKqJ,kBAAkB1D,KAAM3F,OACvEA,KAAKsJ,SAAUtJ,KAAKmJ,mBAEpBnJ,KAAKuJ,gBAAkB,IAAIxK,WAC3BiB,KAAKsJ,SAAUtJ,KAAKuJ,iBAEpBvJ,KAAK4H,WAAa,IAAI4B,OAAW,GAAI,IACrCxJ,KAAKsJ,SAAUtJ,KAAK4H,YAEpB5H,KAAK4H,WAAW6B,KAAOzJ,KAAKuJ,gBAE5BvJ,KAAKkF,qBACLlF,KAAK4D,mBAGT/D,mBACI,IAAI6J,EAAU1J,KAAK2J,0BACfX,EAAehJ,KAAKiJ,qBAExBjJ,KAAK4H,WAAWhJ,MAAQoB,KAAK4J,wBAC7B5J,KAAK4H,WAAWhJ,MAAM8K,QAAUG,KAAKC,IAAIC,MAAOF,KAAMH,GACtD1J,KAAK4H,WAAWlH,EAAIV,KAAKuC,WAAamH,EAAQ,IAAMV,EAAaE,OAASlJ,KAAK4H,WAAWsB,QAAU,EACpGlJ,KAAK4H,WAAWnH,EAAIiJ,EAAQ,GAC5B1J,KAAK4H,WAAWjE,KAAO3D,KAAKgK,uBAE5BhK,KAAKiK,uBAAwBjB,GAC7BhJ,KAAKkK,qBAAsBlB,EAAcU,GAG7C7J,uBAAwBsK,GACpBnK,KAAKmJ,kBAAkBiB,QACvBpK,KAAKmJ,kBAAkBnK,UAAW,GAClCgB,KAAKmJ,kBAAkB3J,SAAU,EAAG,EAAG2K,EAAOhL,MAAOgL,EAAOjB,QAC5DlJ,KAAKmJ,kBAAkB1J,UACvBO,KAAKmJ,kBAAkBxI,aAAeX,KAAK8D,UAG/CjE,qBAAsBsK,EAAQT,GAC1B1J,KAAKuJ,gBAAgBa,QACrBpK,KAAKuJ,gBAAgBvK,UAAW,GAChCgB,KAAKuJ,gBAAgB/J,SAAUkK,EAAQ,GAAI,EAAGS,EAAOhL,MAAQuK,EAAQ,GAAKA,EAAQ,GAAIS,EAAOjB,QAC7FlJ,KAAKuJ,gBAAgB9J,UAGzBI,oBACSG,KAAK4H,aAEV5H,KAAK4G,YAAa5G,KAAK4H,YACvB5H,KAAK4G,YAAa5G,KAAKmJ,mBAEvBnJ,KAAK4H,WAAWvC,UAChBrF,KAAKmJ,kBAAkB9D,UAEvBrF,KAAK4H,WAAa,KAClB5H,KAAKmJ,kBAAoB,MAG7BtJ,oBACIG,KAAK6E,qBAAqB,GAE1BwF,WAAYrK,KAAKsK,aAAa3E,KAAM3F,MAAO,IAG/CH,eACSG,KAAKuK,aACNvK,KAAK8E,QAGbjF,wBACI,IAAIjB,EAAQ,IAAI4L,YAEhB,IAAK,IAAIvF,KAAOjF,KAAK4B,aACjB,OAAQqD,GACJ,IAAK,QACDrG,EAAMR,KAAO4B,KAAK4B,aAAaxC,MAC/B,MACJ,IAAK,aACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,YACDR,EAAMqG,GAAOjF,KAAK4B,aAAaqD,GAC/B,MACJ,IAAK,gBACDrG,EAAM6L,cAAgBC,WAAY1K,KAAK4B,aAAa6I,eAchE,OATIzK,KAAKuC,aACL3D,EAAMuD,WAAauI,WAAY9L,EAAM+L,UACrC/L,EAAMgM,UAAW,EACjBhM,EAAMiM,cAAgB7K,KAAKiJ,qBAAsB9J,OAGhB,IAAjCa,KAAK6D,WAAWa,MAAMT,SACtBrF,EAAMR,KAAO4B,KAAK8C,mBAEflE,EAGXiB,0BACI,IAAIiL,EAAS9K,KAAK4B,aAAamJ,WAAaL,WAAY1K,KAAK4B,aAAamJ,YAAc,EAExF,GAAI/K,KAAK4B,aAAa8H,SAAW1J,KAAK4B,aAAa8H,QAAQzF,OAAS,EAAG,CACnE,IAAI+G,EAAahL,KAAK4B,aAAa8H,QAAQuB,OAAQC,MAAO,KAE1D,GAAyB,GAArBF,EAAW/G,OAAa,CACxB,IAAIyF,EAAUgB,WAAYM,EAAW,IACrC,MAAO,CAACtB,EAASA,EAASA,EAASA,EAAUoB,GAC1C,GAAyB,GAArBE,EAAW/G,OAAa,CAC/B,IAAIkH,EAAWT,WAAYM,EAAW,IAClCI,EAAWV,WAAYM,EAAW,IACtC,MAAO,CAACG,EAAUC,EAAUD,EAAUC,EAAWN,GAC9C,GAAyB,GAArBE,EAAW/G,OAAa,CAC/B,IAAIyF,EAAUsB,EAAWK,IAAKC,GACnBZ,WAAYY,IAGvB,OADA5B,EAAQ,IAAMoB,EACPpB,GAIf,MAAO,CAAC,EAAG,EAAG,EAAGoB,GAGrBjL,uBACI,OAAwC,IAAjCG,KAAK6D,WAAWa,MAAMT,OAAejE,KAAK6C,aAAe7C,KAAK6D,WAAWa,MAGpF7E,qBACI,MACM0L,EADQvL,KAAK4J,wBACA4B,eAEnBxL,KAAKyL,cAAgBC,cAAiBC,YAAaJ,GAMvD1L,iBACIG,KAAKoF,mBAEL,IAAIwG,EAAS,CAAC,UAAW,UAAW,YAChC5C,EAAehJ,KAAKiJ,qBAExB,IAAK,IAAI4C,KAAKD,EACV5L,KAAKyC,WAAWmJ,EAAOC,IAAM7L,KAAKqC,eAC9B2G,EAAa7J,MACb6J,EAAaE,OACb0C,EAAOC,IAIf7L,KAAK0C,UAAUsG,aAAeA,EAGlCnJ,mBACQG,KAAK0H,OACL1H,KAAK4G,YAAa5G,KAAK0H,MACvB1H,KAAK0H,KAAO,MAGhB,IAAK,IAAImE,KAAK7L,KAAKyC,WACfzC,KAAKyC,WAAWoJ,GAAGxG,UACnBrF,KAAKyC,WAAWoJ,GAAK,YACd7L,KAAKyC,WAAWoJ,GAO/BhM,YACI,OAAOyF,SAASwG,gBAAkB9L,KAAK6D,WAG3ChE,oBAAqBgI,GACjB7H,KAAK6D,WAAWjF,MAAM+H,QAAUkB,EAAU,QAAU,OAGxDhI,mBACI,IAAIkM,EAAO/L,KAAKmF,eAAe6G,KAAKC,wBAChC9B,EAAS,CAAErC,IAAMiE,EAAKjE,IAAKC,KAAOgE,EAAKhE,KAAM5I,MAAQ4M,EAAK5M,MAAO+J,OAAS6C,EAAK7C,QAGnF,OAFAiB,EAAOpC,MAAQzG,OAAO4K,QACtB/B,EAAOrC,KAAOxG,OAAO6K,QACdhC,EAGXtK,qBACI,IAAIuM,GAAe,EAEdpM,KAAK2C,aACN2C,SAASmB,KAAKC,YAAa1G,KAAK6D,YAChCuI,GAAe,GAGnB,IAAIC,EAAgBrM,KAAK6D,WAAWjF,MAAMoJ,UACtCsE,EAActM,KAAK6D,WAAWjF,MAAM+H,QACxC3G,KAAK6D,WAAWjF,MAAMoJ,UAAY,GAClChI,KAAK6D,WAAWjF,MAAM+H,QAAU,QAChC,IAAIwD,EAASnK,KAAK6D,WAAWoI,wBAO7B,OANAjM,KAAK6D,WAAWjF,MAAMoJ,UAAYqE,EAClCrM,KAAK6D,WAAWjF,MAAM+H,QAAU2F,EAE5BF,GACA9G,SAASmB,KAAKG,YAAa5G,KAAK6D,YAE7BsG,EAGXtK,gCACI,IAAIyI,EAAgBtI,KAAKmF,eAAe6G,KAAKC,wBACzCM,EAASvM,KAAKwI,eAAeC,QAKjC,OAHA8D,EAAOC,MAAOxM,KAAKkH,YAAalH,KAAKkH,aACrCqF,EAAOC,MAAOlE,EAAcnJ,MAAQa,KAAKmF,eAAehG,MACpDmJ,EAAcY,OAASlJ,KAAKmF,eAAe+D,QACxCqD,EAGX1M,iBAAkB4M,GACd,MAAO,UAAY,CAACA,EAAEC,EAAGD,EAAEE,EAAGF,EAAEG,EAAGH,EAAEI,EAAGJ,EAAEK,GAAIL,EAAEM,IAAIC,KAAM,KAAO,IAGrEnN,qBAAsBoN,EAAIC,GACtB,SAAKD,IAAOC,IAERD,EAAGP,GAAKQ,EAAGR,GACRO,EAAGN,GAAKO,EAAGP,GACXM,EAAGL,GAAKM,EAAGN,GACXK,EAAGJ,GAAKK,EAAGL,GACXI,EAAGH,IAAMI,EAAGJ,IACZG,EAAGF,IAAMG,EAAGH,GAIvBlN,oBAAqBsN,EAAIC,GACrB,SAAKD,IAAOC,IAERD,EAAGpF,MAAQqF,EAAGrF,MACXoF,EAAGrF,KAAOsF,EAAGtF,KACbqF,EAAGhO,OAASiO,EAAGjO,OACfgO,EAAGjE,QAAUkE,EAAGlE"}